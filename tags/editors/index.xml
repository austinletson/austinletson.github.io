<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>editors on &#34;Like punning, programming is a play on words.&#34; -Alan Perlis</title>
    <link>https://austinletson.github.io/tags/editors/</link>
    <description>Recent content in editors on &#34;Like punning, programming is a play on words.&#34; -Alan Perlis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Apr 2020 14:09:05 -0400</lastBuildDate>
    
	<atom:link href="https://austinletson.github.io/tags/editors/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Express Yourself! The Power of Regular Expressions in Vim</title>
      <link>https://austinletson.github.io/post/expressing-yourself/</link>
      <pubDate>Wed, 29 Apr 2020 14:09:05 -0400</pubDate>
      
      <guid>https://austinletson.github.io/post/expressing-yourself/</guid>
      <description>Sometimes we know what we want to do with text even if we don&amp;rsquo;t know what the text is.
Regular expressions are an important feature of many tools (programing languages, command line tools, etc.), but they play an especially important role in Vim. Text in Vim is first class, so all of Vim&amp;rsquo;s features should ultimately serve the purpose of editing text. Here we will explore some examples where regular expressions serve Vim well in this effort.</description>
    </item>
    
    <item>
      <title>Thinking in Letters: Why Word Processors are Anti-words</title>
      <link>https://austinletson.github.io/post/thinking-in-letters/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://austinletson.github.io/post/thinking-in-letters/</guid>
      <description>“To the man who only has a hammer, everything he encounters begins to look like a nail.” ― Abraham Maslow
 Word processors have monopolized the domain of text composition for the last quarter century. At their core, these programs involve text entry at the cursor, but with this function come a peripheral of features: formatting, grammar and spell checking, support for annotation. However, the essential functionality is simple: move the cursor with the mouse or the arrow keys and type or delete letters at the cursor.</description>
    </item>
    
  </channel>
</rss>